version: '3.9'

volumes:
  # caddy-data:
  postgres-data:


networks:
  strapi:
    name: Strapi
    driver: bridge

services:
  # caddy:
  #   image: ${CADDY_IMAGE}
  #   networks:
  #     - strapi
  #   restart: unless-stopped
  #   volumes:
  #     - caddy-data:/data
  #     - ./Caddyfile:/etc/caddy/Caddyfile
  #     - ./logs/caddy/:/var/log/caddy
  #     - ./certs/:/data/certs
  #   ports:
  #     - "80:80"
  #     - "443:443"

  strapi:
    container_name: strapi
    build:
      context: ./backend
      args:
        NODE_IMAGE: ${NODE_IMAGE}
        NODE_ENV: ${NODE_ENV}
    image: ${STRAPI_IMAGE}
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SCHEMA: ${DATABASE_SCHEMA}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
      FAST_REFRESH: ${FAST_REFRESH}
    volumes:
      - ./backend:/opt/app
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    networks:
      - strapi
    depends_on:
      - strapi-db
    working_dir: "/opt/app"
    command: |-
      bash -c "
        set -eux
        yarn config set network-timeout 600000 -g
        yarn install
        yarn build
        yarn develop
      "

  strapi-db:
    container_name: strapi-db
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: ${POSTGRES_IMAGE}
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - '5432:5432'
    networks:
      - strapi

  strapi-frontend:
    image: ${NODE_IMAGE}
    working_dir: /var/www/html
    tty: true
    environment:
      - YBUILD=yarn start:dev
    user: ${DOCKER_USER:-1000}:${DOCKER_USER:-1000}
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    volumes:
      - ./frontend:/var/www/html
    command: |-
      bash -c "
        set -eux
        yarn install
        yarn build
        yarn dev
      "
    networks:
      - strapi